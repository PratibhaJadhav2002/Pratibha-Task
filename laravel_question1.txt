Middleware & Security
Create a Laravel middleware that ensures only users with an `is_admin` flag in the database can access certain routes.

ANSWER

Step 1: Create the Middleware
php artisan make:middleware AdminMiddleware

This will create a new file at:
app/Http/Middleware/AdminMiddleware.php

step 2:
AdminMiddleware.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdminMiddleware
{
    public function handle(Request $request, Closure $next)
    {
        // Check if the user is authenticated and is an admin
        if (!Auth::check() || Auth::user()->is_admin != 1) {
            return response()->json(['error' => 'Access denied. Admins only.'], 403);
        }

        return $next($request); // Allow request to proceed
    }
}


Step 3: Register Middleware in Kernel.php
protected $routeMiddleware = [
    'admin' => \App\Http\Middleware\AdminMiddleware::class,
];


Step 4: Apply Middleware to Routes
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\AdminController;

Route::middleware(['auth', 'admin'])->group(function () {
    Route::get('/admin/dashboard', [AdminController::class, 'index']);
});

Now, only users with is_admin = 1 can access /admin/dashboard.
Unauthorized users will receive a 403 Forbidden response.


